@page "/chat"
@page "/chat/{RouteUsername}/{Session_Key:int}"
@rendermode InteractiveServer

<style>
    .yellow-border-focus > .mud-input-control-input-container > .mud-input.mud-input-outlined > input:focus-within ~ .mud-input-outlined-border{@($"border-color: {Colors.Yellow.Darken2};")}
    .yellow-border-hover > .mud-input-control-input-container > .mud-input.mud-input-outlined > input:hover ~ .mud-input-outlined-border{@($"border-color: {Colors.Yellow.Darken2};")}
    .yellow-border > .mud-input-control-input-container > .mud-input.mud-input-outlined >  .mud-input-outlined-border{@($"border-color: {Colors.Yellow.Lighten4}");}
</style>

<MudAppBar Fixed="false" Elevation="0" Style="@($"background:{Colors.Yellow.Lighten3}; height: 8vh;")">
    <MudButton @onclick="ToggleChat" Edge="Edge.Start" Style="@($"color:{Colors.Yellow.Darken4}; background:{Colors.Amber.Lighten3}; font-size: 1.2em;")">View Chats</MudButton>
    <MudSpacer />
    <MudText Edge="Edge.End" Style="@($"color:{Colors.Yellow.Darken4}; font-size: 1.75em; font-weight:900;")">LemonChat</MudText>
</MudAppBar>
<MudDrawerContainer Style="@($"background:{Colors.Yellow.Darken2}; height; 92vh;")">
    <MudDrawer Overlay="false" Elevation="0" @bind-Open="@_openChat" Style="@($"color:{Colors.Yellow.Darken4}; background:{Colors.Yellow.Lighten4}; height: 92vh;")">
        <MudDrawerHeader style="padding-left: 25%;"><MudText Typo="Typo.h3" style="font-weight: 700;">@Username</MudText></MudDrawerHeader>
        <div style="padding-left: 100%; height: .5em; width: 50%; background-color:@($"{Colors.Yellow.Darken4}");"></div>
        <br>
        <MudDrawerContainer class="customized-scrollbar" style="padding: 0 5%; overflow: scroll;">
            <MudTextField @bind-Value="CreateChat" DebounceInterval="1000" OnDebounceIntervalElapsed="UpdateChats" class="yellow-border yellow-border-hover yellow-border-focus" Placeholder="New Chat" Variant="Variant.Outlined" Adornment="Adornment.End" OnAdornmentClick="CreateGroup" AdornmentIcon="@Icons.Material.Filled.Add" Style="@($"width: 100%; background:{Colors.Amber.Accent1}; border-radius: 4px;")"></MudTextField>
            <br>
            @foreach(ChatInfo chat in Chats)
            {
                <MudText>@($"{chat.Chat_Name}")</MudText>
            }
        </MudDrawerContainer>
    </MudDrawer>
    <MudMainContent Style="@($"background:{Colors.Yellow.Darken2}; height: 92vh;")">
        <MudPaper Style="@($"background:{Colors.Amber.Accent1}; height:70vh; width: 80vw; margin: auto; margin-top: -5vh; border-radius: 4px;")" Elevation="0">
            <div class="container customized-scrollbar" style="padding-top: 10px; height: 75vh; width: 80vw; overflow: scroll; background-color: rgb(0, 0, 0, 0);">
                <h1>
                    text here
                </h1>
            </div>
        </MudPaper>
        <MudTextField @bind-Value="InputChat" DebounceInterval="1000" OnDebounceIntervalElapsed="UpdateChatGroup" class="yellow-border yellow-border-hover yellow-border-focus" Placeholder="Send chat" Variant="Variant.Outlined" Adornment="Adornment.End" OnAdornmentClick="SendChat" AdornmentIcon="@Icons.Material.Filled.Send" Style="@($"width: 80vw; margin: auto; background:{Colors.Amber.Accent1}; border-radius: 4px;")"></MudTextField>
    </MudMainContent>
</MudDrawerContainer>

@code {

    List<ChatInfo> Chats = [];
    ChatInfo? CurrentGroup;
    string InputChat = "";
    string CreateChat = "";
    bool _openChat = true;

    [Parameter]
    public string? RouteUsername { get; set; }

    [Parameter]
    public int Session_Key { get; set; }

    private string Username = "";

    UserController userController;
    ChatInfoController chatInfoController;
    ChatGroupController chatGroupController;

    protected override void OnInitialized() {
        Username = RouteUsername ?? Username;
        string connectionString = Config.GetConnectionString("Default") ?? "";
        userController = new UserController(connectionString);
        if(!userController.IsCorrectLogin(Username, Session_Key)) Navigation.NavigateTo("/");
        chatInfoController = new ChatInfoController(connectionString);
        Chats = chatInfoController.ChatsUserIsIn(Username);
        chatGroupController = new ChatGroupController(connectionString);
    }

    void UpdateChatGroup()
    {

    }

    void UpdateChats()
    {
        Chats = chatInfoController.ChatsUserIsIn(Username);
    }

    void SendChat()
    {
        if(CurrentGroup == null) return;
        chatGroupController.SendChat(5775, Username, InputChat);
    }

    void ToggleChat()
    {
        _openChat = !_openChat;
    }

    void CreateGroup()
    {
        chatInfoController.CreateChat(Username, CreateChat);
        Chats = chatInfoController.ChatsUserIsIn(Username);
        CreateChat = "";
    }

}